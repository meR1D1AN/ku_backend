from rest_framework_simplejwt.authentication import JWTAuthentication


class CookieJWTAuthentication(JWTAuthentication):
    """
    –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ JWT-—Ç–æ–∫–µ–Ω—É –∏–∑ cookie `access_token`.

    –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, —Ç–æ–∫–µ–Ω –∏—â–µ—Ç—Å—è –≤ cookies.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–∫–µ–Ω–∞ SimpleJWT.
    """

    def authenticate(self, request):
        print("üö® CookieJWTAuthentication –∞–∫—Ç–∏–≤–µ–Ω")
        header = self.get_header(request)
        if header is None:
            raw_token = request.COOKIES.get("access_token")
        else:
            raw_token = self.get_raw_token(header)

        if raw_token is None:
            print("üö´ –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –≤ –∫—É–∫–∞—Ö")
            return None

        try:
            validated_token = self.get_validated_token(raw_token)
            print("‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω")
            return self.get_user(validated_token), validated_token
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–æ–∫–µ–Ω–µ: {e}")
            return None
