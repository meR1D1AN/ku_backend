# Generated by Django 5.2.5 on 2025-08-27 07:27

import django.contrib.postgres.indexes
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("blogs", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="article",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="articles",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Автор",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="articles",
                to="blogs.category",
                verbose_name="Категория",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="article",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="blogs.article",
                verbose_name="Статья",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="children",
                to="blogs.comment",
                verbose_name="Родительский комментарий",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Автор",
            ),
        ),
        migrations.AddField(
            model_name="commentlike",
            name="comment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="likes",
                to="blogs.comment",
                verbose_name="Комментарий",
            ),
        ),
        migrations.AddField(
            model_name="commentlike",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
        migrations.AddField(
            model_name="mediaasset",
            name="article",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="media",
                to="blogs.article",
                verbose_name="Статья",
            ),
        ),
        migrations.AddField(
            model_name="reaction",
            name="article",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reactions",
                to="blogs.article",
                verbose_name="Статья",
            ),
        ),
        migrations.AddField(
            model_name="reaction",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reactions",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="tags",
            field=models.ManyToManyField(blank=True, to="blogs.tag", verbose_name="Теги"),
        ),
        migrations.AddField(
            model_name="article",
            name="theme",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="articles",
                to="blogs.theme",
                verbose_name="Тема",
            ),
        ),
        migrations.AddConstraint(
            model_name="commentlike",
            constraint=models.UniqueConstraint(fields=("comment", "user"), name="unique_comment_reaction"),
        ),
        migrations.AddConstraint(
            model_name="mediaasset",
            constraint=models.UniqueConstraint(fields=("article", "order"), name="unique_media_order_per_article"),
        ),
        migrations.AddIndex(
            model_name="reaction",
            index=models.Index(fields=["article", "-created_at"], name="reaction_idx"),
        ),
        migrations.AddConstraint(
            model_name="reaction",
            constraint=models.UniqueConstraint(fields=("user", "article"), name="unique_article_reaction"),
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(fields=["status", "-published_at"], name="status_pub_idx"),
        ),
        migrations.AddIndex(
            model_name="article",
            index=django.contrib.postgres.indexes.GinIndex(fields=["countries"], name="countries_gin"),
        ),
    ]
